#!/bin/bash
PITAYA_DIR="${PITAYA_LIB_PATH}";
WORKING_FOLDER=$( pwd );



## FUNCTIONS
function UNMOUNT_PROJ {
	for DIR in $( find "${WORKING_FOLDER}" -mindepth 1 -maxdepth 1 -type d -not -name "." -not -name ".." ); do
		CANDIDATES=$( mount -l | grep "${DIR}" );
		if [ "${#CANDIDATES[@]}" -eq "0" ]; then continue; fi;

		for CANDIDATE_PATHS in "${CANDIDATES[@]}"; do
			read -a RESULT_COMPS <<< "${CANDIDATE_PATHS}";
			if [ "${RESULT_COMPS[2]}" == "${DIR}" ]; then
				umount ${DIR}
			fi;
		done;
	done;
}

function STDERR { cat - 1>&2; }

function UNPACK_SAMPLE {
	SAMPLE_NAME="$1"
	if [ -e "${SAMPLE_NAME}.example.php" ]; then
		if [ ! -e "${SAMPLE_NAME}.php" ]; then
			mv "${SAMPLE_NAME}.example.php" "${SAMPLE_NAME}.php";
		else
			rm "${SAMPLE_NAME}.example.php"
		fi;
	fi;
}
###

## Check command
mode=$1;

if [ "${mode}" == "-k" ]; then
	shift;
	
	if [[ $EUID -ne 0 ]]; then
		echo "Pitaya kernel mode must be run by root!" | STDERR;
		exit 1;
	fi
	
	command=$1;
	case "${command}" in
		"install" )
			shift;
			CANDIDATE_PITAYA_DIR=$( dirname $( dirname $(pwd) ) );
			
			echo -n "Enter Pitaya repo's local path: [${CANDIDATE_PITAYA_DIR}] ";
			read PITAYA_PATH;
			if [ "${PITAYA_PATH}" == "" ]; then
				PITAYA_PATH="${CANDIDATE_PITAYA_DIR}";
			fi
			
			if [ ! -d "${PITAYA_PATH}" ] || [ ! -x "${PITAYA_PATH}/env/centos/pitaya" ]; then
				echo "Pitaya path is invalid!"; exit 1;
			fi
			
			if [ ! -f "/bin/pitaya" ]; then
				ln -s "${PITAYA_PATH}/env/centos/pitaya" /bin;
			fi
			
			echo -n "Pitaya working timezone? [UTC] ";
			read PITAYA_TIMEZONE;
			if [ "${PITAYA_TIMEZONE}" == "" ]; then
				PITAYA_TIMEZONE="UTC";
			fi
			
			echo -n "Enable debug mode? [y/n] ";
			read DECISION;
			if [ "${DECISION}" == "y" ]; then
				DEBUG_MODE=on
			else
				DEBUG_MODE=off
			fi
			
			echo -n "Emmit runtime exception? [y/n] ";
			read DECISION;
			if [ "${DECISION}" == "y" ]; then
				EXCEPTION=off
			else
				EXCEPTION=on
			fi
			
			cat <<CONF >> /etc/profile


export PITAYA_LIB_PATH="${PITAYA_PATH}";
export PITAYA_SYSTEM_TIMEZONE="${PITAYA_TIMEZONE}";
export PITAYA_EXEC_DEBUG_MODE=${DEBUG_MODE};
export PITAYA_EXEC_THROW_EXCEPTION=${EXCEPTION};

CONF
	;;
	esac
	
	exit 0;
fi;




## Check Pitaya Library Path
if [ "${PITAYA_DIR}" == "" ]; then
	echo "PITAYA_LIB_PATH environmental variable is not defined!" | STDERR;
	exit 1;
fi;


if [ "${mode}" == "-c" ]; then
	shift;
	command=$1;
	case "${command}" in
		"create" )
			shift;
			ProjDir="$1";
			if [ "${ProjDir}" != "" ]; then
				mkdir "${ProjDir}";
				cd "${ProjDir}";
			fi



			if [ ! -e "./Pitaya" ]; then ln -s "${PITAYA_DIR}/src" "./Pitaya"; fi;
			if [ ! -e "./Services" ]; then mkdir Services; fi;
			if [ ! -e "./Share" ]; then mkdir Share; fi;



			find "${PITAYA_DIR}/env/http" -type f -exec cp \{\} ./ \;
#			find "${PITAYA_DIR}/env/centos" -type f -not -name "pitaya" -exec cp \{\} ./ \;

			UNPACK_SAMPLE "cli";
			UNPACK_SAMPLE "config";
			UNPACK_SAMPLE "common";

			UNPACK_SAMPLE "config-host";
			if [ ! "$1" == "--host-base" ] && [ ! "$1" == "-host" ]; then rm "config-host.php"; else shift; fi;

			rm pitaya.bat
			exit 0;
		;;

		"unmount" )
			UNMOUNT_PROJ
			exit 0;
		;;

		"showmount" )
			mount_list=$( mount -l | grep $(pwd) );
			echo "${mount_list[@]}";
			exit 0;
		;;

		"destroy" )
			UNMOUNT_PROJ
			find "${WORKING_FOLDER}" -mindepth 1 -maxdepth 1 -not -name "." -not -name ".." -exec rm -rf \{\} \;
			exit 0;
		;;

		* )
			if [ ! "${command}" == "" ]; then
				echo "${command} is not a valid command!" | STDERR;
			fi;

			echo "Supported commands are create, unmount, showmount and destroy!" | STDERR;

			exit 1;
		;;
	esac;

	exit 0;
fi



if [ -f "${mode}" ]; then
	shift;
	count=0; while [ "$#" -gt "0" ]; do ARGS[$count]=$( echo "$1" ); shift; (( count++ )); done;
	"${PITAYA_DIR}/src/portal.sh" -entry "${mode}" "${ARGS[@]}"
elif [ ! -e "./Pitaya/portal.sh" ]; then
	count=0; while [ "$#" -gt "0" ]; do ARGS[$count]=$( echo "$1" ); shift; (( count++ )); done;
	"${PITAYA_DIR}/src/portal.sh" "${ARGS[@]}"
else
	count=0; while [ "$#" -gt "0" ]; do ARGS[$count]=$( echo "$1" ); shift; (( count++ )); done;
	./Pitaya/portal.sh "${ARGS[@]}"
fi
